#
# BEGIN DANDY GENERATED CODE
#

# Please do not modify this section.

# nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && \
  printf %s "${HOME}/.nvm" || \
  printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

# nvm - use .nvmrc automatically
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

# PATH
export PATH=/opt/homebrew/opt/gnu-getopt/bin:/opt/homebrew/opt/python@3/bin:/opt/homebrew/bin:/usr/bin/python3:node_modules/.bin:$PATH
export PATH="$PATH:/Applications/Docker.app/Contents/Resources/bin/"
export PATH="$PATH:/Applications/Docker.app/Contents/Resources/cli-plugins/"

# Initialize
add-zsh-hook chpwd load-nvmrc
load-nvmrc

#
# END DANDY GENERATED CODE
#